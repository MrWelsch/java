<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>knuth</groupId>
    <artifactId>Kochbuch</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>Kochbuch</name>
    <url>http://maven.apache.org</url>

    <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

    <properties>
        
        <!--Dependency versions-->
		
        <!--Java 11-->
        <java.version>11.0.9</java.version>

        <!--JavaFX-->
        <javafx.version>13</javafx.version>
        <javafx.maven.version>0.0.4</javafx.maven.version>

        <!--JUnit-->
		<junit.jupiter.version>5.5.2</junit.jupiter.version>

        <!--Encoding-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--Maven compiler-->
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.version>3.8.1</maven.compiler.version>
        <maven.jarPlug.version>3.2.0</maven.jarPlug.version>
        <maven.surefirePlug.version>2.22.2</maven.surefirePlug.version>

        <!--Configure mainclass here-->
        <mainClass>knuth.main.ApplicationKnuth</mainClass>

    </properties>


    <dependencies>

        <!--Maven plugin to use peticular java version to compile code-->
        <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven.compiler.version}</version>
        </dependency>

        <!--JUnit 5 for writing tests-->
        <dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>

        <!--OpenJFX 13 for graphical interfaces-->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!--OpenJFX 13 for graphical interfaces-->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!--Spring-Framework-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

        <dependency>
            <groupId>net.rgielen</groupId>
            <artifactId>javafx-weaver-spring</artifactId>
            <version>1.3.0</version>
        </dependency>

    
</dependencies>


    <build>
        <plugins>

            <!--Maven Surefire plugin to run tests from maven-->
            <plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefirePlug.version}</version>
			</plugin>

            <!--Run .jar files by setting a main class-->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jarPlug.version}</version>
                <configuration>
                        <archive>
                                <manifest>
                                        <mainClass>
                                                ${mainclass}
                                        </mainClass>
                                </manifest>
                        </archive>
                </configuration>
            </plugin>

            <!--Spring-Framework plugin-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

            <!--OpenJFX plugin-->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>${javafx.maven.version}</version>
                <configuration>
                    <mainClass>
                        knuth.main.ApplicationKnuth
                    </mainClass>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>